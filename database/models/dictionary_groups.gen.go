// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameDictionaryGroup = "dictionary_groups"

// DictionaryGroup mapped from table <dictionary_groups>
type DictionaryGroup struct {
	ID          int64          `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt   time.Time      `gorm:"column:created_at;type:timestamp with time zone" json:"created_at"`
	UpdatedAt   time.Time      `gorm:"column:updated_at;type:timestamp with time zone" json:"updated_at"`
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone" json:"deleted_at"`
	UserID      int64          `gorm:"column:user_id;type:bigint;not null;comment:用户ID" json:"user_id"`            // 用户ID
	TenantID    int64          `gorm:"column:tenant_id;type:bigint;not null;comment:租户ID" json:"tenant_id"`        // 租户ID
	Name        string         `gorm:"column:name;type:character varying(198);not null;comment:字典组名称" json:"name"` // 字典组名称
	Slug        string         `gorm:"column:slug;type:text" json:"slug"`
	Description string         `gorm:"column:description;type:character varying(198);not null;comment:字典组描述" json:"description"` // 字典组描述
}

func (*DictionaryGroup) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameDictionaryGroup
	}
	return namer.TableName(TableNameDictionaryGroup)
}
