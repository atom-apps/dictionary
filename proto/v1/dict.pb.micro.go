// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/v1/dict.proto

package v1

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for DictionaryService service

func NewDictionaryServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for DictionaryService service

type DictionaryService interface {
	GetItems(ctx context.Context, in *GetItemsRequest, opts ...client.CallOption) (*GetItemsResponse, error)
}

type dictionaryService struct {
	c    client.Client
	name string
}

func NewDictionaryService(name string, c client.Client) DictionaryService {
	return &dictionaryService{
		c:    c,
		name: name,
	}
}

func (c *dictionaryService) GetItems(ctx context.Context, in *GetItemsRequest, opts ...client.CallOption) (*GetItemsResponse, error) {
	req := c.c.NewRequest(c.name, "DictionaryService.GetItems", in)
	out := new(GetItemsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DictionaryService service

type DictionaryServiceHandler interface {
	GetItems(context.Context, *GetItemsRequest, *GetItemsResponse) error
}

func RegisterDictionaryServiceHandler(s server.Server, hdlr DictionaryServiceHandler, opts ...server.HandlerOption) error {
	type dictionaryService interface {
		GetItems(ctx context.Context, in *GetItemsRequest, out *GetItemsResponse) error
	}
	type DictionaryService struct {
		dictionaryService
	}
	h := &dictionaryServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&DictionaryService{h}, opts...))
}

type dictionaryServiceHandler struct {
	DictionaryServiceHandler
}

func (h *dictionaryServiceHandler) GetItems(ctx context.Context, in *GetItemsRequest, out *GetItemsResponse) error {
	return h.DictionaryServiceHandler.GetItems(ctx, in, out)
}
